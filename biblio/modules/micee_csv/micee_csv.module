<?php
/*
 * @file micee_csv.module
 *
 */
 
/**
 * Implementation of hook_menu().
 */
function micee_csv_menu() {
  $items = array();
	
  $items['node/%/import-csv'] = array(
    'title' => 'Import MICEE Schema',
    'description' => 'Import MICEE Schema Content',
    'page callback' => 'micee_csv_load_schema',
    'page arguments' => array(1),
		'access callback' => array('micee_cv_is_biblio'),
    'file' => 'micee_csv.upload.inc',
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE,
  );
  $items['node/%node/export-csv'] = array(
    'title' => 'Export MICEE Schema',
    'description' => 'Export MICEE Schema Content in CSV Format',
    'page callback' => 'micee_csv_print_schema',
    'page arguments' => array(1),
		'access arguments' => array('access content'),
    'file' => 'micee_csv.download.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function micee_cv_is_biblio(){
	$node = node_load(arg(1));
  if ($node && $node->type == 'biblio' && node_access('update', $node)) {
    return TRUE; 
  }else{
		return FALSE;
	}
}

/**
 * Creates a link to export a node (or view) in csv format
 *
 * @param $base this is the base url (defaults to /biblio)
 * @param $nid  the node id, if NULL then the current view is exported
 * @return  a link (<a href=...>MICEE Schema CSV</a>)
 */
function micee_csv_biblio_export_link($nid = NULL, $filter = array()) {
  $show_link = variable_get('biblio_export_links', array('micee_csv' => TRUE));
  if (!isset($show_link['micee_csv']) || empty($show_link['micee_csv']) || !biblio_access('export')) {
    return array();
  }
  $base = variable_get('biblio_base', 'biblio');

  $link = array();
  $link['attributes']['title'] = t("Click to download the MICEE Schema in a CSV formatted file");
  $link['attributes'] += array('rel' => 'nofollow');
  $link['attributes'] += array('target' => '_blank');
  $link['attributes'] += array('type' => 'application/octet-stream');

  $link['href']  = "node";
  if (!empty($nid)) {
    $link['href'] .= '/' . $nid;
  }
	$link['href'] .= '/export-csv';
  $link['title'] = t('MICEE Schema CSV');

  if (empty($nid)) { // add any filters which may be on the current page
    //$link['query'] = $filter;
		$link = NULL; // kill the url for instances where it would attempt to filter queries of multiple entries as the link is for 1 - 1 downloads only.
  }else{
		return array('biblio_micee_csv' => $link);
	}
}

function micee_csv_node_view($node, $view_mode) {
  if ($node->type == 'biblio') {
    switch ($view_mode) {
      case 'full':
      case 'teaser':
        $links = micee_csv_biblio_export_link($node->nid);
        $node->content['links']['micee_csv'] = array(
          '#links' => $links,
          '#attributes' => array('class' => array('links', 'inline')),
        );
    }
  }
}

function micee_csv_biblio_export_options() {
  return array('micee_csv'  => t('MICEE Schema CSV'));
}



function micee_csv_form_biblio_node_form_alter(&$form, &$form_state, $form_id) {	

	
  if (($form_id == 'biblio_node_form') && !$form_state['submitted'] && !isset($form['#node']->nid)) {
		$form['biblio_micee_import_links'] = array(
        '#type' => 'fieldset',
        '#title' => t('MICEE Data Import'),
        '#weight' => 50,
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
    );
		$form['biblio_micee_import_links']['import_info'] = array(  // array('@name' => $user->name, '@missed' => $alert)
			'#markup' => t('!code1MICEE Publication records can be created through a variety of file imports. To access the Import form, !url!code2The MICEE Schema can be applied to any individual publication you have previously entered through a MICEE CSV file import. To view a list of your publication submissions available for editing, !url2 More information on working with MICEE CSV files can be found !url3!code3', array('!url' => l(t('click here.'), "biblio/import"), '!br' => '<br>', '!url2' => l(t('click here.'), "my-submissions"), '!url3' => l(t('here.'), "micee-csv-tutorial"),'!code1' => '<ul><li>', '!code2' => '</li><li>', '!code3' => '</li><ul>' )),
		);
		$form['biblio_micee_data_input_help'] = array(
        '#type' => 'markup',
			'#markup' => t('<p><strong>Data Entry Help: </strong>More information on the MICEE Data Entry process can be found in the !url</p>', array('!url' => l(t('help section.'), "micee-data-entry-process-help") )),
        '#weight' => 51,
        '#collapsible' => FALSE,
    );
  }
}